syntax = "proto3";
package proto;
import "google/protobuf/empty.proto";

option go_package = "github.com/anyuan-chen/record/proto/pkg/core_pb";

message Number {
    int64 number = 1;
}
message Token {
    bytes token = 1;
}
message NumberWithToken {
    Number number = 1;
    Token token = 2;
}
message JSONResponse {
    bytes data = 1;
}
message FloatScore {
    double score = 1;
}
message Image {
    bytes image = 1;
}
message QueryWithToken {
    string query = 1;
    repeated string types = 2;
    Token token = 3;
}
message CollageInfoAndToken {
    int64 rows = 1;
    int64 cols = 2;
    int64 size = 3;
    Token token = 4;
}
message IDWithToken {
    string id = 1;
    Token token = 2;
}
service CoreManager {
    rpc GetTopArtists(NumberWithToken) returns (JSONResponse){}
	rpc GetTopSongs(NumberWithToken) returns (JSONResponse){}
	rpc GetTopGenres(NumberWithToken) returns (JSONResponse){}

    rpc GetRecommendedSongs(NumberWithToken) returns (JSONResponse){}
    rpc MakeRecommendedPlaylist(Token) returns(google.protobuf.Empty){}
    rpc GetPopularityScore(Token) returns (FloatScore){}

	rpc GetTopArtistsCollage(CollageInfoAndToken) returns (Image){}
	rpc GetTopAlbumsCollage(CollageInfoAndToken) returns (Image){}

    rpc GetRandomTopArtistsCollage(CollageInfoAndToken) returns (Image){}
    rpc GetRandomTopAlbumsCollage(CollageInfoAndToken) returns (Image){}

    rpc Search(QueryWithToken) returns (JSONResponse){}
    rpc GetSongInfo(IDWithToken) returns (JSONResponse){}
    rpc GetSongAudioFeatures(IDWithToken) returns (JSONResponse){}
}

// protoc -I=. --go_out=./pkg/core_pb --go_opt=paths=source_relative \
// --go-grpc_out=./pkg/core_pb --go-grpc_opt=paths=source_relative \
// core.proto 

// python3 -m grpc_tools.protoc -I=./ --python_out=./pkg/image_processing_pb \
// --grpc_python_out=./pkg/image_processing_pb core.proto