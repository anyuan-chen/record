# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import core_pb2 as core__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class CoreManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTopArtists = channel.unary_unary(
                '/proto.CoreManager/GetTopArtists',
                request_serializer=core__pb2.NumberWithToken.SerializeToString,
                response_deserializer=core__pb2.JSONResponse.FromString,
                )
        self.GetTopSongs = channel.unary_unary(
                '/proto.CoreManager/GetTopSongs',
                request_serializer=core__pb2.NumberWithToken.SerializeToString,
                response_deserializer=core__pb2.JSONResponse.FromString,
                )
        self.GetTopGenres = channel.unary_unary(
                '/proto.CoreManager/GetTopGenres',
                request_serializer=core__pb2.Token.SerializeToString,
                response_deserializer=core__pb2.JSONResponse.FromString,
                )
        self.GetRecommendedSongs = channel.unary_unary(
                '/proto.CoreManager/GetRecommendedSongs',
                request_serializer=core__pb2.NumberWithToken.SerializeToString,
                response_deserializer=core__pb2.JSONResponse.FromString,
                )
        self.MakeRecommendedPlaylist = channel.unary_unary(
                '/proto.CoreManager/MakeRecommendedPlaylist',
                request_serializer=core__pb2.Token.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetPopularityScore = channel.unary_unary(
                '/proto.CoreManager/GetPopularityScore',
                request_serializer=core__pb2.Token.SerializeToString,
                response_deserializer=core__pb2.FloatScore.FromString,
                )
        self.GetTopArtistsCollage = channel.unary_unary(
                '/proto.CoreManager/GetTopArtistsCollage',
                request_serializer=core__pb2.Token.SerializeToString,
                response_deserializer=core__pb2.Image.FromString,
                )
        self.GetTopAlbumsCollage = channel.unary_unary(
                '/proto.CoreManager/GetTopAlbumsCollage',
                request_serializer=core__pb2.Token.SerializeToString,
                response_deserializer=core__pb2.Image.FromString,
                )


class CoreManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTopArtists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopSongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopGenres(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecommendedSongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeRecommendedPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPopularityScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopArtistsCollage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopAlbumsCollage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoreManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTopArtists': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopArtists,
                    request_deserializer=core__pb2.NumberWithToken.FromString,
                    response_serializer=core__pb2.JSONResponse.SerializeToString,
            ),
            'GetTopSongs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopSongs,
                    request_deserializer=core__pb2.NumberWithToken.FromString,
                    response_serializer=core__pb2.JSONResponse.SerializeToString,
            ),
            'GetTopGenres': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopGenres,
                    request_deserializer=core__pb2.Token.FromString,
                    response_serializer=core__pb2.JSONResponse.SerializeToString,
            ),
            'GetRecommendedSongs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecommendedSongs,
                    request_deserializer=core__pb2.NumberWithToken.FromString,
                    response_serializer=core__pb2.JSONResponse.SerializeToString,
            ),
            'MakeRecommendedPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeRecommendedPlaylist,
                    request_deserializer=core__pb2.Token.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetPopularityScore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPopularityScore,
                    request_deserializer=core__pb2.Token.FromString,
                    response_serializer=core__pb2.FloatScore.SerializeToString,
            ),
            'GetTopArtistsCollage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopArtistsCollage,
                    request_deserializer=core__pb2.Token.FromString,
                    response_serializer=core__pb2.Image.SerializeToString,
            ),
            'GetTopAlbumsCollage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopAlbumsCollage,
                    request_deserializer=core__pb2.Token.FromString,
                    response_serializer=core__pb2.Image.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.CoreManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoreManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTopArtists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/GetTopArtists',
            core__pb2.NumberWithToken.SerializeToString,
            core__pb2.JSONResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopSongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/GetTopSongs',
            core__pb2.NumberWithToken.SerializeToString,
            core__pb2.JSONResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopGenres(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/GetTopGenres',
            core__pb2.Token.SerializeToString,
            core__pb2.JSONResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecommendedSongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/GetRecommendedSongs',
            core__pb2.NumberWithToken.SerializeToString,
            core__pb2.JSONResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeRecommendedPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/MakeRecommendedPlaylist',
            core__pb2.Token.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPopularityScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/GetPopularityScore',
            core__pb2.Token.SerializeToString,
            core__pb2.FloatScore.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopArtistsCollage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/GetTopArtistsCollage',
            core__pb2.Token.SerializeToString,
            core__pb2.Image.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopAlbumsCollage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.CoreManager/GetTopAlbumsCollage',
            core__pb2.Token.SerializeToString,
            core__pb2.Image.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
